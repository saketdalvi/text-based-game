{"version":3,"sources":["../src/fileprocessing.js"],"names":["files","tresCoords","treasures","_onFilesSelected","processed_arr","results","result","add","coordinates","set","treasure","onChange","promise","Promise","resolve","arr_promises","i","length","file","push","pFileReader","all","reader","FileReader","reject","onload","evt","target","readyState","DONE","JSON","parse","readAsText"],"mappings":";;;;;;;;uEAKO,iBAAwBA,KAAxB,EAA+BC,UAA/B,EAA2CC,SAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuBC,iBAAiBH,KAAjB,CADvB;;AAAA;AACCI,qCADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAGoBA,aAHpB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGSC,+BAHT;;AAIK,8CAAM,MAAN,EAAcA,OAAd;;AAJL;AAAA;AAAA;AAAA;AAMK,0CAAmBA,OAAnB,2HAA4B;AAAnBC,kCAAmB;;AACxBL,uCAAWM,GAAX,CAAeD,OAAOE,WAAtB;AACAN,sCAAUO,GAAV,CAAcH,OAAOE,WAArB,EAAkCF,OAAOI,QAAzC;AACH;AATN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAYC,8CAAM,MAAN,EAAa,6BAAb;;AAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Q;;;;;AALtB;;AACA;;AAEA;;;;AAkBA,SAASR,gBAAT,CAA0BH,KAA1B,EAAiC;;AAE7B,QAAIY,UAAUC,QAAQC,OAAR,EAAd;AACA,QAAIC,eAAe,EAAnB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIhB,MAAMiB,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,YAAIE,OAAOlB,MAAMgB,CAAN,CAAX;AACAD,qBAAaI,IAAb,CAAkBC,YAAYF,IAAZ,CAAlB;AACH;AACD,WAAOL,QAAQQ,GAAR,CAAYN,YAAZ,CAAP;AACH;;AAGD,SAASK,WAAT,CAAqBF,IAArB,EAA2B;AACvB,QAAII,SAAS,IAAIC,UAAJ,EAAb;AACA,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUU,MAAV,EAAqB;AACpCF,eAAOG,MAAP,GAAgB,UAAUC,GAAV,EAAe;AAC3B,gBAAIA,IAAIC,MAAJ,CAAWC,UAAX,IAAyBL,WAAWM,IAAxC,EAA8C;AAC1Cf,wBAAQgB,KAAKC,KAAL,CAAWL,IAAIC,MAAJ,CAAWrB,MAAtB,CAAR;AACH;AACJ,SAJD;;AAMA,YAAIY,IAAJ,EAAU;AACNI,mBAAOU,UAAP,CAAkBd,IAAlB,EAAwB,OAAxB;AACH;AACJ,KAVM,CAAP;AAWH","file":"fileprocessing.js","sourcesContent":["import \"babel-core/register\";\nimport \"babel-polyfill\";\n\nimport {print} from './additions.js';\n\nexport async function onChange(files, tresCoords, treasures) {\n    var processed_arr = await _onFilesSelected(files);\n    try{\n        for(var results of processed_arr) {\n            print(\"file\", results);\n    \n            for (var result of results) {\n                tresCoords.add(result.coordinates);\n                treasures.set(result.coordinates, result.treasure);\n            }\n        }\n    } catch(e){\n        print(\"file\",\"reading error\" + e);\n    }\n}\n\nfunction _onFilesSelected(files) {\n\n    var promise = Promise.resolve();\n    var arr_promises = [];\n    for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n        arr_promises.push(pFileReader(file));\n    }\n    return Promise.all(arr_promises);\n}\n\n\nfunction pFileReader(file) {\n    var reader = new FileReader();\n    return new Promise((resolve, reject) => {\n        reader.onload = function (evt) {\n            if (evt.target.readyState == FileReader.DONE) {\n                resolve(JSON.parse(evt.target.result));\n            }\n        };\n\n        if (file) {\n            reader.readAsText(file, \"UTF-8\");\n        }\n    });\n}\n"]}